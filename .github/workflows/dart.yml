name: Test & build APK
on:
  push:
    branches:
      - master
jobs:
  unit_testing:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Generate .env file
        run: echo "${{RIFT_SERVER_BASE_URL}}=${{secrets.RIFT_SERVER_BASE_URL}}" > .env
      - name: Get dependencies
        run: flutter pub get
      - name: Run unit tests
        run: flutter test

  build_apk:
    name: Build Flutter (Android)
    needs: [unit_testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Create key.properties
        run: |
          touch android/keystore.properties
          echo "storePassword=${{secrets.RELEASE_KEYSTORE_PASSPHRASE}}
          keyPassword=${{secrets.KEY_PASSWORD}}
          keyAlias=${{secrets.ALIAS}}
          storeFile=${PWD}/android/key.jks" > ./android/keystore.properties
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
        env:
          KEY_JKS: ${{ secrets.RELEASE_KEYSTORE }}
          SIGNING_KEY_ALIAS: ${{ secrets.ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.ALIAS_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      - name: Decode Keystore
        run: |
          echo "${{secrets.RELEASE_KEYSTORE}}" > release.keystore.asc
          gpg -d --passphrase "${{secrets.RELEASE_KEYSTORE_PASSPHRASE}}" --batch release.keystore.asc > android/key.jks
      - name: Get dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk
      - uses: actions/upload-artifact@v1
        with:
          name: signed-app.apk
          path: build/app/outputs/apk/release/app-release.apk